# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.1 on Tue Nov 20 10:47:56 2007

import wx
import os

import Config

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class cSaveGameConvert(wx.Dialog):
    def __init__(self, *args, **kwds):
        self.Save_File = kwds["Save_File"]
        self.ROM = kwds["ROM"]
        self.InSGM = kwds["InSGM"]
        del kwds["Save_File"]
        del kwds["ROM"]
        del kwds["InSGM"]
        # begin wxGlade: cSaveGameConvert.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.Dummy_Label1 = wx.StaticText(self, -1, _("Original Save Game Format : "))
        self.Original_Choice = wx.Choice(self, -1, choices=[])
        self.Dummy_Label2 = wx.StaticText(self, -1, _("New Save Game Format : "))
        self.Destination_Choice = wx.Choice(self, -1, choices=[])
        self.OK = wx.Button(self, wx.ID_OK, _("OK"))
        self.Cancel = wx.Button(self, wx.ID_CANCEL, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.On_OK, id=wx.ID_OK)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: cSaveGameConvert.__set_properties
        self.SetTitle(_("Convert Save Game"))
        self.SetSize((346, 170))
        # end wxGlade

    def __do_layout(self):
        self.Freeze()
        # begin wxGlade: cSaveGameConvert.__do_layout
        Convert_Sizer = wx.FlexGridSizer(2, 1, 0, 0)
        Convert_Sizer3 = wx.FlexGridSizer(1, 5, 0, 0)
        Convert_Sizer2 = wx.FlexGridSizer(3, 2, 0, 0)
        Convert_Sizer2.Add(self.Dummy_Label1, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 5)
        Convert_Sizer2.Add(self.Original_Choice, 0, wx.ALL|wx.EXPAND, 5)
        Convert_Sizer2.Add((20, 20), 0, 0, 0)
        Convert_Sizer2.Add((20, 20), 0, 0, 0)
        Convert_Sizer2.Add(self.Dummy_Label2, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 5)
        Convert_Sizer2.Add(self.Destination_Choice, 0, wx.ALL|wx.EXPAND, 5)
        Convert_Sizer2.AddGrowableCol(1)
        Convert_Sizer.Add(Convert_Sizer2, 1, wx.EXPAND, 0)
        Convert_Sizer3.Add((20, 20), 0, wx.EXPAND, 0)
        Convert_Sizer3.Add(self.OK, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 5)
        Convert_Sizer3.Add((20, 20), 0, wx.EXPAND, 0)
        Convert_Sizer3.Add(self.Cancel, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 5)
        Convert_Sizer3.Add((20, 20), 0, wx.EXPAND, 0)
        Convert_Sizer3.AddGrowableCol(0)
        Convert_Sizer3.AddGrowableCol(4)
        Convert_Sizer.Add(Convert_Sizer3, 1, wx.TOP|wx.BOTTOM|wx.EXPAND, 5)
        self.SetSizer(Convert_Sizer)
        Convert_Sizer.AddGrowableRow(0)
        Convert_Sizer.AddGrowableCol(0)
        self.Layout()
        self.Centre()
        # end wxGlade
        self.__Local_Init ()
        self.Thaw()
        
    def __Local_Init (self):
        self.Save_Size = os.path.getsize(self.Save_File)
        
        for Device in Config.Config ["Devices"]:
            if Device[1]("SIZE") == self.Save_Size:
                self.Original_Choice.Append(Device[0])
            else:
                if self.InSGM:
                    self.Destination_Choice.Append(Device[0])
                    
        if self.InSGM == False:
            for Device in Config.Config ["Devices"]:
                self.Destination_Choice.Append(Device[0])
                
        self.Original_Choice.SetSelection(0)
        self.Destination_Choice.SetStringSelection(Config.Config ["Default_Device"])
        
        if self.InSGM:
            self.Dummy_Label1.Hide()
            self.Original_Choice.Hide()
            self.Layout()
            self.Fit()
            self.Centre()

    def On_OK(self, event): # wxGlade: cSaveGameConvert.<event_handler>
        OrigT = self.Original_Choice.GetStringSelection()
        DestT = self.Destination_Choice.GetStringSelection()

        for Device in Config.Config ["Devices"]:
            if Device [0] == OrigT:
                Orig = Device
            elif Device [0] == DestT:
                Dest = Device
                
        Data = Orig[1]("READ", self.Save_File)
        
        Dest[1]("WRITE", self.Save_File, Data)
        
        event.Skip()

# end of class cSaveGameConvert


